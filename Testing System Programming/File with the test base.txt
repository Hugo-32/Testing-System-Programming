THEME - CYCLES.

1. What is a loop in C++?
a) A data type used to store multiple values
b) A statement that executes a block of code repeatedly
c) A function that takes input and returns output
d) A conditional statement that controls program flow
Answer: b) A statement that executes a block of code repeatedly

2. What is the syntax for a for loop in C++?
a) for (i = 0; i < n; i++)
b) for (i = n; i > 0; i--)
c) for (i = 0; i <= n; i++)
d) for (i = n; i >= 0; i--)
Answer: a) for (i = 0; i < n; i++)

3. What is the syntax for a while loop in C++?
a) while (i < n) { }
b) while (i > n) { }
c) while (i <= n) { }
d) while (i >= n) { }
Answer: a) while (i < n) { }

4. What is the syntax for a do-while loop in C++?
a) do { } while (i < n);
b) do { } while (i > n);
c) do { } while (i <= n);
d) do { } while (i >= n);
Answer: a) do { } while (i < n);

5. How many times will a for loop with the condition i < 5 be executed if i is initially 0?
a) 4
b) 5
c) 6
d) 0
Answer: b) 5

6. What is the purpose of the continue statement in C++?
a) To exit a loop
b) To skip the current iteration of a loop and continue with the next iteration
c) To execute a block of code repeatedly
d) To initialize a loop variable
Answer: b) To skip the current iteration of a loop and continue with the next iteration

7. What is the purpose of the break statement in C++?
a) To skip the current iteration of a loop and continue with the next iteration
b) To execute a block of code repeatedly
c) To exit a loop
d) To initialize a loop variable
Answer: c) To exit a loop

8. What is the difference between a while loop and a do-while loop in C++?
a) There is no difference
b) A while loop always executes at least once, while a do-while loop may not execute at all
c) A do-while loop always executes at least once, while a while loop may not execute at all
d) A while loop and a do-while loop are used for different types of iterations
Answer: c) A do-while loop always executes at least once, while a while loop may not execute at all

9. What is the difference between a for loop and a while loop in C++?
a) There is no difference
b) A for loop is used when the number of iterations is known in advance, while a while loop is used when the number of iterations is not known in advance
c) A while loop is used when the number of iterations is known in advance, while a for loop is used when the number of iterations is not known in advance
d) A for loop and a while loop are used for different types of iterations
Answer: b) A for loop is used when the number of iterations is known in advance, while a while loop is used when the number of iterations is not known in advance

10. What is an infinite loop in C++?
a) A loop that executes a block of code a fixed number of times
b) A loop that executes a block of code an unknown number of times
c) A loop that never terminates
d) A loop that terminates after a certain condition is met
Answer: c) A loop that never terminates

11. What is the purpose of a nested loop in C++?
a) To execute a block of code repeatedly
b) To skip the current iteration of a loop and continue with the next iteration
c) To exit a loop
d) To perform iterations within iterations
Answer: d) To perform iterations within iterations

12. What is the syntax for a nested for loop in C++?
a) for (i = 0; i < n; i++) { for (j = 0; j < m; j++) { } }
b) for (i = n; i > 0; i--) { for (j = m; j > 0; j--) { } }
c) for (i = 0; i <= n; i++) { for (j = 0; j <= m; j++) { } }
d) for (i = n; i >= 0; i--) { for (j = m; j >= 0; j--) { } }
Answer: a) for (i = 0; i < n; i++) { for (j = 0; j < m; j++) { } }

13. What is the purpose of a loop counter in C++?
a) To control the number of iterations in a loop
b) To execute a block of code repeatedly
c) To exit a loop
d) To initialize a loop variable
Answer: a) To control the number of iterations in a loop

14. What is the syntax for a range-based for loop in C++?
a) for (i : container) { }
b) for (i in container) { }
c) for (i = 0; i < container.size(); i++) { }
d) for (i = container.begin(); i != container.end(); i++) { }
Answer: a) for (i : container) { }

15. What is the purpose of the break statement in a nested loop in C++?
a) To skip the current iteration of a loop and continue with the next iteration
b) To execute a block of code repeatedly
c) To exit the innermost loop
d) To exit the outermost loop
Answer: c) To exit the innermost loop

16. What is the purpose of the continue statement in a nested loop in C++?
a) To exit the innermost loop
b) To skip the current iteration of the innermost loop and continue with the next iteration of the outer loop
c) To skip the current iteration of the outer loop and continue with the next iteration of the innermost loop
d) To execute a block of code repeatedly
Answer: b) To skip the current iteration of the innermost loop and continue with the next iteration of the outer loop

17. What is the purpose of the do-while loop in C++?
a) To execute a block of code repeatedly
b) To skip the current iteration of a loop and continue with the next iteration
c) To exit a loop
d) To execute a block of code at least once, and then continue to execute it repeatedly as long as a certain condition is met
Answer: d) To execute a block of code at least once, and then continue to execute it repeatedly as long as a certain condition is met

18. What is the purpose of the while loop in C++?
a) To execute a block of code repeatedly
b) To execute a block of code as long as a certain condition is met
c) To exit a loop
d) To skip the current iteration of a loop and continue with the next iteration
Answer: b) To execute a block of code as long as a certain condition is met

19. What is an infinite loop in C++?
a) A loop that executes a block of code a fixed number of times
b) A loop that executes a block of code an unknown number of times
c) A loop that never terminates
d) A loop that terminates after a certain condition is met
Answer: c) A loop that never terminates

20. How can you prevent an infinite loop in C++?
a) By using a break statement
b) By using a continue statement
c) By using a while loop instead of a for loop
d) By ensuring that the loop condition eventually becomes false
Answer: d) By ensuring that the loop condition eventually becomes false

21. What is the purpose of the do-while loop in C++?
a) To execute a block of code repeatedly
b) To skip the current iteration of a loop and continue with the next iteration
c) To exit a loop
d) To execute a block of code at least once, and then continue to execute it repeatedly as long as a certain condition is met
Answer: d) To execute a block of code at least once, and then continue to execute it repeatedly as long as a certain condition is met

22. What is the difference between a while loop and a do-while loop in C++?
a) A while loop only executes if the condition is initially true, while a do-while loop always executes at least once
b) A while loop always executes at least once, while a do-while loop only executes if the condition is initially true
c) A while loop and a do-while loop are interchangeable and can be used interchangeably
d) There is no difference between a while loop and a do-while loop
Answer: a) A while loop only executes if the condition is initially true, while a do-while loop always executes at least once

23. What is the syntax for a while loop in C++?
a) while (condition) { }
b) while (i < n) { }
c) while (true) { }
d) while (i > 0) { }
Answer: a) while (condition) { }

24. What is the syntax for a do-while loop in C++?
a) do { } while (condition);
b) while (condition) { }
c) for (i = 0; i < n; i++) { }
d) do while (condition) { }
Answer: a) do { } while (condition);

25. What is the purpose of the continue statement in a loop in C++?
a) To exit the loop
b) To skip the current iteration of the loop and continue with the next iteration
c) To execute a block of code repeatedly
d) To initialize a loop variable
Answer: b) To skip the current iteration of the loop and continue with the next iteration

26. What is the purpose of the break statement in a loop in C++?
a) To skip the current iteration of the loop and continue with the next iteration
b) To execute a block of code repeatedly
c) To exit the loop
d) To initialize a loop variable
Answer: c) To exit the loop

27. What is the difference between a for loop and a range-based for loop in C++?
a) A for loop is used to iterate over a range of values, while a range-based for loop is used to iterate over a container or sequence
b) A for loop and a range-based for loop are interchangeable and can be used interchangeably
c) A for loop is used to iterate over a container or sequence, while a range-based for loop is used to iterate over a range of values
d) There is no difference between a for loop and a range-based for loop
Answer: a) A for loop is used to iterate over a range of values, while a range-based for loop is used to iterate over a container or sequence

28. What is the purpose of a loop in programming?
a) To execute a block of code repeatedly
b) To skip the current iteration of a loop and continue with the next iteration
c) To exit a loop
d) To execute a block of code a fixed number of times or until a certain condition is met
Answer: d) To execute a block of code a fixed number of times or until a certain condition is met

What is the difference between a do-while loop and a while loop in C++?
a) A do-while loop executes the code block at least once, while a while loop may not execute at all if the condition is false initially.
b) A do-while loop is used for iterating over a container or sequence, while a while loop is used for iterating over a range of values.
c) A do-while loop executes the code block only if the condition is true initially, while a while loop always executes the code block at least once.
d) There is no difference between a do-while loop and a while loop.
Answer: a) A do-while loop executes the code block at least once, while a while loop may not execute at all if the condition is false initially.

What is the purpose of the switch statement in C++?
a) To execute a block of code repeatedly
b) To exit a loop
c) To select one of several code blocks to execute based on the value of a variable
d) To initialize a loop variable
Answer: c) To select one of several code blocks to execute based on the value of a variable.

THEME - ARRAYS (ONE- AND TWO-DIMENSIONAL).

1. How do you declare an array of integers with a size of 5?
a) int arr[5];
b) int arr(5);
c) int arr = {5};
d) int arr = [5];

2. What is the index of the last element in an array of size n?
a) n
b) n-1
c) n+1
d) n*2

3. How do you get the address of the first element in an array arr?
a) &arr
b) *arr
c) arr
d) &arr[0]

4. Which symbol is used to access array elements?
a) $
b) %
c) #
d) []

5. What is the value of arr[2] in the array arr = {1, 2, 3, 4, 5}?
a) 1
b) 2
c) 3
d) 4

6. How do you declare a 2D array with a size of 3 by 3?
a) int arr[3,3];
b) int arr[3][3];
c) int arr(3,3);
d) int arr(3)(3);

7. How do you access the value of an element in a 2D array at arr[1][2]?
a) arr(1,2);
b) arr(2,1);
c) arr[1][2];
d) arr[2][1];

8. How do you print the value of an element in a 2D array at arr[3][4]?
a) cout << arr(3,4);
b) cout << arr(4,3);
c) cout << arr[3][4];
d) cout << arr[4][3];

9. What is the syntax for assigning a value of 10 to the third element in an array arr?
a) arr[3] = 10;
b) arr(3) = 10;
c) arr{3} = 10;
d) arr(10,3);

10. How do you find the length of an array arr?
a) sizeof(arr);
b) length(arr);
c) len(arr);
d) size(arr);

11. How do you declare an array of strings with a size of 4?
a) string arr(4);
b) string arr[4];
c) string arr = {"", "", "", ""};
d) string arr = [4];

12. What is the difference between a one-dimensional and a two-dimensional array?
a) A one-dimensional array has only one element, while a two-dimensional array has multiple elements.
b) A one-dimensional array has a single row, while a two-dimensional array has multiple rows.
c) A one-dimensional array has only one column, while a two-dimensional array has multiple columns.
d) A one-dimensional array has a linear structure, while a two-dimensional array has a rectangular structure.

13. How do you access the value of the last element in an array arr?
a) arr[last];
b) arr[n-1];
c) arr[n];
d) arr[n+1];

14. How do you initialize an array arr with values 1, 2, 3, and 4?
a) int arr = {1, 2, 3, 4};
b) int arr[1, 2, 3, 4];
c) int arr[4] = {1, 2, 3, 4};
d) int arr = [1, 2, 3, 4];

15. How do you declare a 2D array arr with n rows and m columns in C++?
a) int arr[n][m];
b) int arr[n, m];
c) int arr(n, m);
d) int arr[][];

16. How do you find the maximum value in an array arr?
a) max(arr);
b) arr[max];
c) *max(arr);
d) *max_element(arr, arr+n);

17. How do you find the sum of all elements in an array arr?
a) sum(arr);
b) arr[sum];
c) *sum(arr);
d) accumulate(arr, arr+n, 0);

18. How do you sort an array arr in descending order?
a) sort(arr);
b) sort(arr, arr+n);
c) sort(arr, arr+n, greater<int>());
d) sort(arr, arr+n, less<int>());

19. How do you initialize a two-dimensional array arr with dimensions m x n?
a) int arr[m][n];
b) int arr[mn];
c) int arr[m][n] = {0};
d) int arr[mn] = {0};

20. How do you access the element in row i and column j of a two-dimensional array arr?
a) arr[i,j];
b) arr(i,j);
c) arr[i][j];
d) arr(i)(j);

21. How do you initialize a two-dimensional array arr with all elements set to a value of 1?
a) int arr[][] = {1};
b) int arr[][] = {1,1};
c) int arr[][] = {1,1,1};
d) int arr[m][n] = {{1}};

22. How do you find the sum of all elements in a two-dimensional array arr with dimensions m x n?
a) sum(arr);
b) arr[sum];
c) *sum(arr);
d) accumulate(&arr[0][0], &arr[m-1][n-1]+1, 0);

23. How do you find the maximum value in a two-dimensional array arr with dimensions m x n?
a) max(arr);
b) arr[max];
c) *max(arr);
d) *max_element(&arr[0][0], &arr[m-1][n-1]+1);

24. How do you sort the rows of a two-dimensional array arr in ascending order?
a) sort(arr);
b) sort(arr, arr+n);
c) sort(arr[0], arr[m], less<int>());
d) sort(arr[0], arr[m], greater<int>());

25. How do you sort the columns of a two-dimensional array arr in descending order?
a) sort(arr);
b) sort(arr, arr+n);
c) sort(&arr[0][0], &arr[m-1][n-1]+1, greater<int>());
d) sort(&arr[0][0], &arr[m-1][n-1]+1, less<int>());

26. How do you copy the contents of one array arr1 to another array arr2 of the same size?
a) arr2 = arr1;
b) memcpy(arr2, arr1, sizeof(arr1));
c) copy(arr1, arr1+n, arr2);
d) for(int i=0; i<n; i++) arr2[i] = arr1[i];

27. How do you compare two arrays arr1 and arr2 to check if they have the same values?
a) arr1 == arr2;
b) memcmp(arr1, arr2, sizeof(arr1));
c) equal(arr1, arr1+n, arr2);
d) for(int i=0; i<n; i++) if(arr1[i]!=arr2[i]) return false;

28. How do you find the index of the first occurrence of a value x in an array arr?
a) find(x, arr);
b) find(arr, x);
c) find(arr, arr+n, x);
d) find_if(arr, arr+n, [x](int i){return i==x;});

29. How do you find the index of the last occurrence of a value of a value x in an array arr?
a) find_last(arr, x);
b) find_last(x, arr);
c) find_last_of(arr, x);
d) find_last_of(x, arr);

30. How do you delete an element at index i in an array arr?
a) arr[i] = 0;
b) erase(arr[i]);
c) remove(arr, arr+i);
d) for(int j=i; j<n-1; j++) arr[j] = arr[j+1]; n--;

THEME - STRINGS.

1. What is a string in C++?
a) A data type used to store multiple characters
b) A data type used to store a single character
c) A data type used to store integers
d) A data type used to store floating-point numbers
Answer: a) A data type used to store multiple characters

2. What is the syntax for declaring a string variable in C++?
a) char str[];
b) string str;
c) str[] = "hello";
d) str = "hello";
Answer: b) string str;

3. How do you assign a value to a string variable in C++?
a) str = "hello";
b) str[] = "hello";
c) str = 'h';
d) str = 1;
Answer: a) str = "hello";

4. How do you find the length of a string in C++?
a) len(str);
b) length(str);
c) str.length();
d) strlen(str);
Answer: c) str.length();

5. What is the difference between the C-style string and the C++ string?
a) There is no difference
b) C-style string is null-terminated, while C++ string is not
c) C-style string is immutable, while C++ string is mutable
d) C-style string is shorter, while C++ string is longer
Answer: b) C-style string is null-terminated, while C++ string is not

6. What is the function used to concatenate two strings in C++?
a) strcat()
b) strconcat()
c) append()
d) add()
Answer: c) append()

7. How do you access the character at a particular index in a string in C++?
a) str[index]
b) str.charAt(index)
c) str.index(index)
d) str.getChar(index)
Answer: a) str[index]

8. What is the function used to compare two strings in C++?
a) strcmp()
b) strcompare()
c) compare()
d) equals()
Answer: c) compare()

9. What is the return type of the compare() function in C++?
a) int
b) bool
c) char
d) float
Answer: a) int

10. What is the function used to find a substring in a string in C++?
a) strfind()
b) substr()
c) find()
d) search()
Answer: c) find()

11. What is the return type of the find() function in C++?
a) int
b) bool
c) char
d) float
Answer: a) int

12. What is the function used to insert a substring into a string in C++?
a) strinsert()
b) insert()
c) substr()
d) stradd()
Answer: b) insert()

13. What is the function used to erase a substring from a string in C++?
a) strerase()
b) erase()
c) substr()
d) strdelete()
Answer: b) erase()

14. What is the function used to replace a substring in a string with another substring in C++?
a) strreplace()
b) replace()
c) substr()
d) strswap()
Answer: b) replace()

15. What is the function used to convert a string to uppercase in C++?
a) toupper()
b) strupper()
c) uppercase()
d) toUpper()
Answer: c) uppercase()

16. What is the function used to convert a string to lowercase in C++?
a) tolower()
b) strlower()
c) lowercase()
d) toLower()
Answer: c) lowercase()

17. What is the function used to remove all occurrences of a character from a string in C++?
a) remove_char()
b) strremove()
c) erase()
d) remove()
Answer: d) remove()

18. What is the function used to reverse a string in C++?
a) reverse()
b) strreverse()
c) flip()
d) rotate()
Answer: a) reverse()

19. What is the function used to convert a string to an integer in C++?
a) to_int()
b) stoi()
c) str_to_int()
d) int_convert()
Answer: b) stoi()

20. What is the function used to convert an integer to a string in C++?
a) to_string()
b) int_to_str()
c) convert_str()
d) str_convert()
Answer: a) to_string()

21. What is the function used to trim whitespace from the beginning and end of a string in C++?
a) strtrim()
b) trim()
c) trim_whitespace()
d) remove_whitespace()
Answer: b) trim()

22. What is the function used to pad a string with a specific character to a certain length in C++?
a) strpad()
b) pad()
c) pad_string()
d) add_padding()
Answer: b) pad()

23. What is the function used to split a string into substrings based on a delimiter in C++?
a) strsplit()
b) split()
c) split_string()
d) substring()
Answer: b) split()

24. What is the return type of the split() function in C++?
a) string
b) vector<string>
c) int
d) bool
Answer: b) vector<string>

25. What is the function used to join a vector of strings into a single string with a delimiter in C++?
a) strjoin()
b) join()
c) join_string()
d) concatenate()
Answer: b) join()

26. What is the function used to check if a string starts with a specific prefix in C++?
a) starts_with()
b) strstarts()
c) check_prefix()
d) prefix()
Answer: a) starts_with()

27. What is the function used to check if a string ends with a specific suffix in C++?
a) ends_with()
b) strends()
c) check_suffix()
d) suffix()
Answer: a) ends_with()

28. What is the function used to find the first occurrence of a character in a string in C++?
a) strfind()
b) find_char()
c) find()
d) search()
Answer: c) find()

29. What is the function used to convert a string to a double in C++?
a) to_double()
b) stod()
c) str_to_double()
d) double_convert()
Answer: b) stod()

30. What is the function used to convert a double to a string in C++?
a) to_string()
b) double_to_str()
c) convert_str()
d) str_convert()
Answer: a) to_string()